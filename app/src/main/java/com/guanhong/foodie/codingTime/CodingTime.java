


/** day3  求根號**/
////////////////////////////////////////////////////////////////////////////////
//        int num = 29;
//        boolean hasAnswer = false;
//        for (int i = 1; i < num / 2; i++) {
//            if (i * i == num) {
//                Log.d(Constants.TAG + "根號 ", num + "開根號 =  " + i);
//                hasAnswer = true;
//                break;
//            }
//        }
//        if (!hasAnswer) {
//            Log.d(Constants.TAG + "根號 ", num + "開根號 = 無解!");
//        }
/** day3  求根號到小數後一位**/
////////////////////////////////////////////////////////////////////////////////
//        double num = 10;
//        double p = 0, n = 0;
//        double i;
//        for (i = 1; i < num; i = i + 0.1) {
//            if (num - (i * i) <= 0) {
//                p = i - 0.1;
//                n = i;
//                break;
//            }
//        }
//
//        if (num - (p * p) < (n * n) - num) {
//            Log.d(Constants.TAG + "根號 ", num + "開根號 = p =  " + p);
//        } else {
//            Log.d(Constants.TAG + "根號 ", num + "開根號 = n =  " + n);
//        }

////////////////////////////////////////////////////////////////////////////////


/**  day4 兩數交換**/
////////////////////////////////////////////////////////////////////////////////

//a = a+b
//b = a-b
//a = a-b

//a = a^b
//b = a^b
//a = a^b
//P.s. "^" = XOR
/////////////////////////////////////////////////////////////////////////////////


/**  day5 找兩兩乘積最大**/
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////


/**  day6 給陣列找最大**/
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////


/**  day7 給定任意一個數字陣列，將此陣列中的數字從小到大排序。
 請勿使用程式語言內建的運算函式。**/
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////


/**  day8 給定任一正整數，測試此正整數是否為質數。**/
////////////////////////////////////////////////////////////////////////////////

//   int num = 17;
//           boolean isPrime = true;
//
//           for (int i = 2; i < num; i++) {
//        if (num % i == 0) {
//        isPrime = false;
//        break;
//        }
//        }
//        if(isPrime) {
//        Log.d(Constants.CODING_TIME, num + " 是質數 ");
//        }else {
//        Log.d(Constants.CODING_TIME, num + " 不是質數 ");
//
//        }

////////////////////////////////////////////////////////////////////////////////


/**  day9  給定一個任意字串，找出字串中「最長的連續字元」。
 可以使用內建的字串處理方法來取得每個位置的單一字元。

 例如：
 給定 "abccdddddeaab"，印出：d
 給定 "哈哈嘿齁哦那那那那那嘿嘿那嘿嘿嘿"，印出：那**/
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////


/**  day8 **/
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////